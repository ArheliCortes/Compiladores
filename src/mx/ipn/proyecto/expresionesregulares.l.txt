%{
#include <stdio.h>
#include <conio.h>
#include "C:\Users\itzel\OneDrive\Documentos\GitHub\Compiladores\Compiladores\Bison\analexico.h"
%}

%option noyywrap
%option yyline

ignora " "|\t|\n
L [A-Za-z]
D  [0-9]
booleano "valido"|"invalido"

%%
"{ignora}"			{_}
"."				{return ('.')_}
"@/"				{return ('@/')_}
"/@"				{return ('/@')_}
"{"				{return ('{')_}
"}"				{return ('}')_}
";"				{return (';')_}
","				{return (',')_}
")"				{return (')')_}
"("				{return ('(')_}
"</"				{return ('</')_}
"/>"				{return ('/>')_}
"if"				{return SI_}
"elseif"			{return CONTRASI_}
"else"				{return CONTRA_}
"for"			        {return PARA_}
"do"			        {return HACER_}
"while"			        {return MIENTRAS_}
"case"			        {return CASO_}
"is"			        {return ES_}
"when"			        {return CUANDO_}
"end"			        {return FIN_}
"whenothers"			{return ENOTROCASO_}
"vacio"				{return VACIO_}
"fontana"			{return FONTANA_}
"entero"			{return ENT_}
"ristra"			{return RISTRA_}
"grafema"			{return GRAF_}
"racional"			{return RAC_}
"natural"			{return NAT_}
"%n"				{return FORMATO_}
"%r"				{return FORMATO_}
"%d"				{return FORMATO_}
"+"				{return SUMA_}
"*"  				{return MUL_}
"-"  				{return RES_}
"/"  				{return DIV_}
"%"  				{return MOD_}
"'"  				{return COMILLA_}
":="  				{return ASIGNAR_}
"::" 				{return IGUAL_}
"!=" 				{return DIFERENTE_}
">"  				{return MAYOR_}
"<"  				{return MENOR_}
">::"  				{return MAYOR_IGUAL_}
"<::"  				{return MENOR_IGUAL_}
"++"				{return AUMENTAR_}
"--"				{return DISMINUIR_}
{D}+				{return ENT_}
{D}+"."{D}			{return RAC_}
{booleano}			{return BOOLEANO_}
{L} 				{return GRAF_}
"({D}|{L}|" ")*"                {return RISTRA_}
{L}({L}|(D))*			{return NOMBRE_}
.				{printf("Error en linea: %d\n",yylineno);}

%%

yyerror(char * msg)
{
printf("%s\n",msg);
}

int main(void)
{
char NombreArchivo[50];
printf("Ruta del archivo: ");
gets(NombreArchivo);
yyin=fopen(NombreArchivo,"rt");
if(yyin==NULL)
printf("\nNo se puede leer el archivo");
else
yyparse();
fclose(yyin);
getch();
}